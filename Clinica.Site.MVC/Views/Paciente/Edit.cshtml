@model Clinica.Site.Negocio.Cadastro.Paciente


<div class="section section_fale_conosco">
    <div class="container-fluid">
        <div class="row row-titulos-paginas">
            <div class="col-md-12 text-center">
                <h2 class="font-titulo-paginas"><i class="fa fa fa-upload fa-1x" aria-hidden="true"></i>&nbsp;Atualização do Perfil</h2>
            </div>
        </div>
    </div>

    <div class="section">
        <div class="container">
            <div class="row">
                <div class="col-md-8 col-md-offset-2">
                    <form class="form-horizontal" role="form" data-toggle="validator" method="post">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Id)

                            <div class="form-group text-right">
                                <div class="col-sm-3 text-right">
                                    @Html.Label("Cpf:", htmlAttributes: new { @class = "control-label titulo-paginas" })
                                </div>
                                <div class="col-md-5">
                                    <input type="text" value="@Html.DisplayFor(model => model.Cpf)" class="form-control input-sm cpf" name="Cpf" id="Cpf" onclick="Mascara_CPF();" readonly>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-sm-3 text-right">
                                    @Html.Label("Nome:", htmlAttributes: new { @class = "control-label titulo-paginas" })
                                </div>
                                <div class="col-md-5">
                                    <input type="text" value="@Html.DisplayFor(model => model.Nome)" class="form-control input-sm" maxlength="50" name="Nome" id="Nome" placeholder="Nome" required data-error="Favor Informar seu Nome">
                                    <div class="help-block with-errors"></div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-sm-3 text-right">
                                    @Html.Label("E-mail:", htmlAttributes: new { @class = "control-label titulo-paginas" })
                                </div>
                                <div class="col-md-5">
                                    <input type="email" value="@Html.DisplayFor(model => model.Email)" class="form-control input-sm" maxlength="50" name="Email" id="Email" placeholder="E-Mail">
                                    <div class="help-block with-errors"></div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-sm-3 text-right">
                                    @Html.Label("Data de Nascimento:", htmlAttributes: new { @class = "control-label titulo-paginas" })
                                </div>
                                <div class="col-md-5">
                                    <input type="text" value="@Html.DisplayFor(model => model.DataNascimento)" class="form-control input-sm data" name="DataNascimento" id="DataNascimento" placeholder="Data de Nascimento" required data-error="Favor Informar a Data de Nascimento" name="Data" onblur="validaDataRequired(this,this.value,'data-data-nascimento')">
                                    <div class="data-data-nascimento"></div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-sm-3 text-right">
                                    @Html.Label("Celular:", htmlAttributes: new { @class = "control-label titulo-paginas" })
                                </div>
                                <div class="col-md-5">
                                    <input type="text" value="@Html.DisplayFor(model => model.Celular)" class="form-control input-sm celulares_ddd" name="Celular" onfocus="Mascara_ddd_celulares()" id="Celular" placeholder="(99)99999-9999" data-error="Favor Informar um número para contato" required>
                                    <div class="help-block with-errors"></div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-sm-3 text-right">
                                    @Html.Label("Telefone:", htmlAttributes: new { @class = "control-label titulo-paginas" })
                                </div>
                                <div class="col-md-5">
                                    <input type="text" value="@Html.DisplayFor(model => model.TelefoneFixo)" class="form-control input-sm telefones_ddd" name="TelefoneFixo" onfocus="Mascara_ddd_telefones()" id="TelefoneFixo" placeholder="(99)9999-9999">
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-sm-3 text-right">
                                    @Html.LabelFor(model => model.EhPaciente, htmlAttributes: new { @class = "control-label titulo-paginas" })
                                </div>
                                <div class="col-md-5">
                                    <select class="form-control input-sm" name="EhPaciente" id="EhPaciente" required>
                                        <option value="">Escolha uma opção</option>
                                        @{
                                            if (Model.EhPaciente)
                                            {
                                                <option value="Sim" selected>Sim</option>
                                                <option value="Nao">Não</option>
                                            }
                                            else
                                            {
                                                <option value="Sim">Sim</option>
                                                <option value="Nao" selected>Não</option>
                                            }
                                        }
                                        </select>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-sm-3 text-right">
                                    @Html.ActionLink("Voltar", "Index", null, new {@class="btn btn-padrao-verde", style = "color: white" })
                                </div>
                                <div class="col-md-5">
                                    <input type="submit" value="Atualizar" class="btn btn-padrao-verde" />
                                </div>
                            </div>
                        </div>
                        }
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
